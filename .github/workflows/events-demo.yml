name: Events Demo
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - edited
      - review_requested
      - ready_for_review
    branches:
      - main
  workflow_dispatch:
  push:
    branches:
      - main
      - feat/**
    paths-ignore:
      - ".github/workflows/*"
jobs:
  lint:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./react
    steps:
      - name: "First: download the code for ubuntu server"
        uses: actions/checkout@v3
      - name: Check pwd
        run: pwd
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
  test:
    needs: lint
    runs-on: ubuntu-20.04
    env:
      working-directory: ./react
    steps:
      - name: "First: download the code for ubuntu server"
        uses: actions/checkout@v3
      - name: Check pwd
        run: pwd
      - name: "Install nodejs"
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        working-directory: ${{env.working-directory}}
        run: |
          pwd
          npm ci
      - name: Run tests after install
        working-directory: ${{env.working-directory}}
        run: |
          pwd
          npm test
  build:
    needs: test
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./react
    steps:
      - name: "First: download the code for ubuntu server"
        uses: actions/checkout@v3
      - name: "Install nodejs"
        uses: actions/setup-node@v3
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: check working directory
        run: ls -la
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-build-files
          path: |
            dist
            package.json
          if-no-files-found: error #warn/ignore/error
  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy
        run: echo "deploying placeholder..."
